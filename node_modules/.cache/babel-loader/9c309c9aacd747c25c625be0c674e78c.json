{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\jmill\\\\Code\\\\ReactDemos\\\\test-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\jmill\\\\Code\\\\ReactDemos\\\\test-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\jmill\\\\Code\\\\ReactDemos\\\\test-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\jmill\\\\Code\\\\ReactDemos\\\\test-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\jmill\\\\Code\\\\ReactDemos\\\\test-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\jmill\\\\Code\\\\ReactDemos\\\\test-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\jmill\\\\Code\\\\ReactDemos\\\\test-app\\\\src\\\\scheduler\\\\SchedulerPage.jsx\";\nimport React, { Component } from \"react\";\nimport HeaderBar from './../master/HeaderBar';\nimport DaySchedule from './DaySchedule';\nimport { PanelGroup, Row, Col, Grid, Modal, Button } from 'react-bootstrap';\nimport { GetSchedulerData } from \"./../helpers/RestHelper\";\n\nvar SchedulerPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SchedulerPage, _Component);\n\n  function SchedulerPage(props, context) {\n    var _this;\n\n    _classCallCheck(this, SchedulerPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SchedulerPage).call(this, props, context));\n    _this.dayNames = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n\n    _this.renderDays = function () {\n      var days = [];\n      var today = new Date();\n      var dayOfWeek = today.getDay();\n\n      for (var i = dayOfWeek; i < 8; i++) {\n        if (i === 7) {\n          days.push(React.createElement(Col, {\n            key: i,\n            className: \"col-md\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 50\n            },\n            __self: this\n          }, React.createElement(DaySchedule, {\n            eventKey: 0,\n            dayName: _this.dayNames[0],\n            showModal: _this.handleModalShow,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 51\n            },\n            __self: this\n          })));\n        } else {\n          days.push(React.createElement(Col, {\n            key: i,\n            className: \"col-md\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 58\n            },\n            __self: this\n          }, React.createElement(DaySchedule, {\n            eventKey: i,\n            dayName: _this.dayNames[i],\n            showModal: _this.handleModalShow,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 59\n            },\n            __self: this\n          })));\n        }\n      }\n\n      return days;\n    };\n\n    _this.handleSelect = _this.handleSelect.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleModalShow = _this.handleModalShow.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      activeKey: 1,\n      show: false,\n      modalTitle: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(SchedulerPage, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.setState({});\n    }\n  }, {\n    key: \"handleSelect\",\n    value: function handleSelect(activeKey) {\n      this.setState({\n        activeKey: activeKey\n      });\n    }\n  }, {\n    key: \"handleModalShow\",\n    value: function handleModalShow(dayKey) {\n      this.setState({\n        show: true,\n        modalTitle: this.dayNames[dayKey]\n      });\n    }\n  }, {\n    key: \"getDaySchedule\",\n    value: function getDaySchedule() {\n      var data = GetSchedulerData();\n      console.log(\"111\");\n      console.log(data);\n      return data;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      this.getDaySchedule();\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(HeaderBar, {\n        title: \"Scheduler\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }), React.createElement(PanelGroup, {\n        id: \"1\",\n        activeKey: this.state.activeKey,\n        className: \"week-group\",\n        onSelect: this.handleSelect,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(Row, {\n        className: \"full-row\",\n        width: \"100%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, this.renderDays()))), React.createElement(Modal, {\n        className: this.state.show ? \"show\" : \"\",\n        name: \"Scheduler\",\n        show: this.state.show,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(Modal.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(Modal.Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, this.state.modalTitle)), React.createElement(Modal.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, GetSchedulerData())), React.createElement(Modal.Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: function onClick() {\n          _this2.setState({\n            show: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"Close\"), React.createElement(Button, {\n        bsStyle: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"Save changes\"))));\n    }\n  }]);\n\n  return SchedulerPage;\n}(Component);\n\nexport default SchedulerPage;","map":{"version":3,"sources":["C:\\Users\\jmill\\Code\\ReactDemos\\test-app\\src\\scheduler\\SchedulerPage.jsx"],"names":["React","Component","HeaderBar","DaySchedule","PanelGroup","Row","Col","Grid","Modal","Button","GetSchedulerData","SchedulerPage","props","context","dayNames","renderDays","days","today","Date","dayOfWeek","getDay","i","push","handleModalShow","handleSelect","bind","state","activeKey","show","modalTitle","setState","dayKey","data","console","log","getDaySchedule"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport HeaderBar from './../master/HeaderBar'\r\nimport DaySchedule from './DaySchedule';\r\nimport { PanelGroup, Row, Col, Grid, Modal, Button } from 'react-bootstrap';\r\nimport { GetSchedulerData } from \"./../helpers/RestHelper\";\r\n\r\nclass SchedulerPage extends Component {\r\n  constructor(props, context) {\r\n    super(props, context);\r\n    this.handleSelect = this.handleSelect.bind(this);\r\n    this.handleModalShow = this.handleModalShow.bind(this);\r\n    this.state = {\r\n      activeKey: 1,\r\n      show: false,\r\n      modalTitle: \"\"\r\n    };\r\n  }\r\n\r\n  dayNames = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n\r\n\r\n\r\n  componentWillMount() {\r\n    this.setState({\r\n    });\r\n  }\r\n\r\n  handleSelect(activeKey) {\r\n    this.setState({ activeKey });\r\n  }\r\n\r\n  handleModalShow(dayKey) {\r\n    this.setState({ show: true, modalTitle: this.dayNames[dayKey] });\r\n  }\r\n\r\n  getDaySchedule(){\r\n      let data = GetSchedulerData();\r\n      console.log(\"111\");\r\n      console.log(data);\r\n      return data;\r\n  }\r\n\r\n  renderDays = () => {\r\n    var days = [];\r\n    let today = new Date();\r\n    let dayOfWeek = today.getDay();\r\n    for (var i = dayOfWeek; i < 8; i++) {\r\n      if (i === 7) {\r\n        days.push(\r\n          <Col key={i} className=\"col-md\">\r\n            <DaySchedule eventKey={0} dayName={this.dayNames[0]} showModal={this.handleModalShow} />\r\n          </Col>\r\n        );\r\n      }\r\n      else {\r\n\r\n        days.push(\r\n          <Col key={i} className=\"col-md\">\r\n            <DaySchedule eventKey={i} dayName={this.dayNames[i]} showModal={this.handleModalShow} />\r\n          </Col>\r\n        );\r\n      }\r\n    }\r\n    return days;\r\n  }\r\n\r\n  render() {\r\n    this.getDaySchedule();\r\n    return (\r\n      <div>\r\n        <HeaderBar title=\"Scheduler\" />\r\n        <PanelGroup id=\"1\" activeKey={this.state.activeKey} className=\"week-group\" onSelect={this.handleSelect}>\r\n          <Grid fluid>\r\n            <Row className=\"full-row\" width=\"100%\">\r\n              {this.renderDays()}\r\n            </Row>\r\n          </Grid>\r\n        </PanelGroup>\r\n\r\n        <Modal className={this.state.show ? \"show\" : \"\"} name=\"Scheduler\" show={this.state.show} >\r\n          <Modal.Header>\r\n            <Modal.Title>{this.state.modalTitle}</Modal.Title>\r\n          </Modal.Header>\r\n\r\n          <Modal.Body><h4>{GetSchedulerData()}</h4></Modal.Body>\r\n\r\n          <Modal.Footer>\r\n            <Button onClick={() => { this.setState({ show: false }) }}>Close</Button>\r\n            <Button bsStyle=\"primary\">Save changes</Button>\r\n          </Modal.Footer></Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SchedulerPage;"]},"metadata":{},"sourceType":"module"}